# gbu_ai/Algorithms/lesson_2/les_2_task_2.py
# 2. Посчитать четные и нечетные цифры введенного натурального числа. Например,
# если введено число 34560, в нем 3 четные # цифры (4, 6 и 0) и 2 нечетные (3 и 5).


num = input('Введите натуральное число: ')
count_1 = 0  # счетчик нечетных цифр
count_2 = 0  # счетчик четных цифр

for dig in num:
    if int(dig) % 2 == 0:
        count_2 += 1
    else:
        count_1 += 1

print(f'В числе "{num}"" содержится {count_1} нечетных цифр \n'
      f'В числе "{num}"" содержится {count_2} четных цифр')


# скрипт подсчета памяти
vars = list(globals().values())
size = 0
from sys import getsizeof as sz
for var in vars:
    if isinstance(var, dict):
        size += sz(var)
        size += sum([sz(i) for i in var.values()])
        size += sum([sz(i) for i in var.keys()])
    elif isinstance(var, list) or isinstance(var, tuple) or isinstance(var, set) or isinstance(var, frozenset):
        size += sz(var)
        size += sum([sz(i) for i in var])
    else:
        size += sz(var)
print('Память:', size)

"""
-------------------------РЕЗУЛЬТАТ 1:--------------------------
Введите натуральное число: 12345
В числе "12345"" содержится 3 нечетных цифр 
В числе "12345"" содержится 2 четных цифр
Память: 881
-------------------------РЕЗУЛЬТАТ 2:--------------------------
Введите натуральное число: 56789
В числе "56789"" содержится 3 нечетных цифр 
В числе "56789"" содержится 2 четных цифр
Память: 881
-------------------------РЕЗУЛЬТАТ 3:--------------------------
Введите натуральное число: 24682
В числе "24682"" содержится 0 нечетных цифр 
В числе "24682"" содержится 5 четных цифр
Память: 877
-------------------------РЕЗУЛЬТАТ 4:--------------------------
Введите натуральное число: 111111111111111111111111111111111111111111
В числе "111111111111111111111111111111111111111111"" содержится 42 нечетных цифр 
В числе "111111111111111111111111111111111111111111"" содержится 0 четных цифр
Память: 914
"""
